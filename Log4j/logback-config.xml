----------------------------
配置文件节点信息
----------------------------
	# root
		* root的本质就是一个logger
		* 它是所有logger的爹, 所有的logger都会继承它的属性

	# logger
		* 负责日志消息的接收, 过滤, 以及委托appender进行输出

	# appender
		* 负责对输出日志的控制(输出到标准IO, 输出到文件)

	# encoder
	# layout
		* 对日志进行格式化


----------------------------
配置文件
----------------------------
<configuration>
	
	<conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
	<conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
	
	<!-- 控制台输出的格式 -->
	<property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

	<!-- 文件输出的格式 -->
	<property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
	

	<!-- 窗口输出日志 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
		</encoder>
	</appender>
	
	<!-- 滚动日志 -->
	<appender name="rolling"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 日志文件的目录和名称 -->
		<file>production.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 单个日志文件的最大体积，达到该体积后就会进行归档(压缩) -->
			<maxFileSize>100MB</maxFileSize>
			<!-- 单个日志文件超过限定大小后，就会被压缩为zip文件，设置zip文件的名称格式(2019-09-05-0.zip) -->
			<fileNamePattern>%d{yyyy-MM-dd}-%i.zip</fileNamePattern>
			<!-- 保留的存档文件的数量，与上一个 fileNamePattern 有关。 假设定义为6，当fileNamePattern以天为单位时，即保存6天的日志。 
				当以月为单位时，即保存6个月的日志。 旧的日志以异步的方式删除。 -->
			<maxHistory>60</maxHistory>
			<!-- 所有的归档日志的大小。当超过限制时，会删掉旧的归档日志。 -->
			<totalSizeCap>1GB</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
		</encoder>
	</appender>

	<root level="DEBUG">
		<appender-ref ref="console" />
		<appender-ref ref="rolling" />
	</root>
</configuration>